import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_waya/src/widget/picker/ListWheel.dart';import 'package:flutter_waya/waya.dart';class SingleRowPicker extends StatelessWidget {  //点击事件  final GestureTapCallback cancelTap;  final ValueChanged<int> sureTap;  //文字  String sureText;  String cancelText;  String titleText;  //容器属性  final Color backgroundColor;  double height;  //字体样式  TextStyle cancelStyle;  TextStyle titleStyle;  TextStyle sureStyle;  ///以下为滚轮属性  //高度  int initialIndex;  double itemHeight;  int itemCount;  IndexedWidgetBuilder itemBuilder;  double itemWidth;  // 半径大小,越大则越平面,越小则间距越大  double diameterRatio;  // 选中item偏移  double offAxisFraction;  //表示车轮水平偏离中心的程度  范围[0,0.01]  double perspective;  //放大倍率  double magnification;  //是否启用放大镜  bool useMagnifier;  //1或者2  double squeeze;  ScrollPhysics physics;  FixedExtentScrollController controller;  SingleRowPicker({Key key, this.cancelTap, this.sureTap, this.sureText, this.cancelText, this.titleText, this.backgroundColor,    this.height, this.cancelStyle, this.titleStyle,    this.sureStyle, this.itemHeight, this.itemWidth, this.diameterRatio,    this.offAxisFraction, this.perspective, this.magnification, this.useMagnifier, this.squeeze, this.physics, this        .initialIndex, @required this.itemCount, @required this.itemBuilder})      : super(key: key) {    TextStyle textStyle = TextStyle(fontSize: 14, color: Colors.black, decoration: TextDecoration.none,        decorationStyle: TextDecorationStyle.dashed);    if (height == null) height = BaseUtils.getHeight() / 4;    //文字设置    if (sureText == null) sureText = 'sure';    if (cancelText == null) cancelText = 'cancel';    if (titleText == null) titleText = 'title';    //样式设置    if (cancelStyle == null) cancelStyle = textStyle;    if (titleStyle == null) titleStyle = textStyle;    if (sureStyle == null) sureStyle = textStyle;    ///controller    controller = FixedExtentScrollController(initialItem: initialIndex ?? 0);  }  @override  Widget build(BuildContext context) {    return CustomFlex(        mainAxisSize: MainAxisSize.min,        height: height,        decoration: BoxDecoration(color: backgroundColor ?? Colors.white),        padding: EdgeInsets.all(BaseUtils.getWidth(10)),        children: <Widget>[          Row(            mainAxisAlignment: MainAxisAlignment.spaceBetween,            children: <Widget>[              CustomButton(                padding: EdgeInsets.symmetric(horizontal: BaseUtils.getWidth(5), vertical: BaseUtils.getWidth(5)),                text: cancelText,                textStyle: cancelStyle,                onTap: cancelTap,),              CustomButton(text: titleText, textStyle: titleStyle),              CustomButton(                padding: EdgeInsets.symmetric(horizontal: BaseUtils.getWidth(5), vertical: BaseUtils.getWidth(5)),                text: sureText,                textStyle: sureStyle,                onTap: () {                  sureTap(controller.selectedItem);                },)            ],),          Expanded(child: ListWheel(            controller: controller,            itemExtent: itemHeight,            diameterRatio: diameterRatio,            offAxisFraction: offAxisFraction,            perspective: perspective,            magnification: magnification,            useMagnifier: useMagnifier,            squeeze: squeeze,            physics: physics,            itemBuilder: itemBuilder,            itemCount: itemCount, //list.length,          ) //(int index, double pixels) {},          ),        ]);  }}