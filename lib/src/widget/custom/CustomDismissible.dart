import 'package:flutter/cupertino.dart';import 'package:flutter/gestures.dart';class CustomDismissible extends StatelessWidget {  ///子组件  final Widget child;  ///滑动时组件下一层显示的内容  ///没有设置secondaryBackground时，从右往左或者从左往右滑动都显示该内容  ///设置了secondaryBackground后，从左往右滑动显示该内容，从右往左滑动显示secondaryBackground的内容  final Widget background;  ///不能单独设置，只能在已经设置了background后才能设置，从右往左滑动时显示  final Widget secondaryBackground;  ///组件消失前回调，可以弹出是否消失确认窗口。  final ConfirmDismissCallback confirmDismiss;  ///组件大小改变时回调  final VoidCallback onResize;  ///组件消失后回调  final DismissDirectionCallback onDismissed;  /// 滑动方向（水平、垂直）  ///默认DismissDirection.horizontal 水平  final DismissDirection direction;  ///组件大小改变的时长，默认300毫秒。Duration(milliseconds: 300)  final Duration resizeDuration;  ///必须拖动项目的偏移阈值才能被视为已解除  final Map<DismissDirection, double> dismissThresholds;  ///组件消失的时长，默认200毫秒。Duration(milliseconds: 200)  final Duration movementDuration;  ///滑动时偏移量，默认0.0，  final double crossAxisEndOffset;  ///拖动消失后组件大小改变方式  ///start：下面组件向上滑动  ///down：上面组件向下滑动  ///默认DragStartBehavior.start  final DragStartBehavior dragStartBehavior;  const CustomDismissible({Key key,    this.background,    this.secondaryBackground,    this.confirmDismiss,    this.onResize,    this.onDismissed,    DismissDirection direction,    Duration resizeDuration,    Map<DismissDirection, double> dismissThresholds,    Duration movementDuration,    double crossAxisEndOffset,    DragStartBehavior dragStartBehavior,    this.child})      : this.direction=direction ?? DismissDirection.horizontal,        this.resizeDuration=resizeDuration ?? const Duration(milliseconds: 300),        this.dismissThresholds=dismissThresholds ??            const <DismissDirection, double>{},        this.movementDuration=movementDuration ??            const Duration(milliseconds: 200),        this.crossAxisEndOffset=crossAxisEndOffset ?? 0.0,        this.dragStartBehavior=dragStartBehavior ?? DragStartBehavior.start,        super(key: key);  @override  Widget build(BuildContext context) {    return Dismissible(      child: child,      key: key,      background: background,      secondaryBackground: secondaryBackground,      confirmDismiss: confirmDismiss,      onResize: onResize,      onDismissed: onDismissed,      direction: direction,      resizeDuration: resizeDuration,      dismissThresholds: dismissThresholds,      movementDuration: movementDuration,      crossAxisEndOffset: crossAxisEndOffset,      dragStartBehavior: dragStartBehavior,    );  }}