import 'package:flutter/material.dart';import 'package:flutter_waya/flutter_waya.dart';import 'package:flutter_waya/src/widget/overlay/OverlayElement.dart';OverlaysStatus overlayState;class OverlayBase extends StatelessWidget {  final Widget child;  final TextDirection textDirection;  OverlayBase({Key key, this.child, TextDirection textDirection})      : this.textDirection = textDirection ?? TextDirection.ltr,        super(key: key);  @override  Widget build(BuildContext context) {    return Directionality(      textDirection: textDirection,      child: Overlays(        initialEntries: <OverlayElement>[          OverlayElement(builder: (ctx) {            overlayState = Overlays.of(ctx);            return child;          })        ],      ),    );  }}class OverlayTools {  /// 自定义叠层  static OverlayElement show(Widget widget, {Duration closeDuration}) {    if (overlayState == null) return null;    OverlayElement entry = OverlayElement(builder: (context) => widget);    overlayState.insert(entry);    if (closeDuration != null) {      Future.delayed(closeDuration).then((value) {        entry.remove();      });    } else {      return entry;    }    return null;  }  ///关闭最顶层的叠层  static void close({OverlayElement element}) {    if (element != null) {      element.remove();    } else {      var overlayEntries = overlayState.overlayEntries;      if (overlayEntries.length > 1) {        overlayEntries.last?.remove();      }    }  }  ///关闭所有  static void closeAll() {    var overlayEntries = overlayState.overlayEntries;    if (overlayEntries.length > 1) {      overlayEntries.map((e) {        if (overlayEntries.indexOf(e) > 0) {          e.remove();        }      });    }  }}