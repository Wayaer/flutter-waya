import 'package:flutter/material.dart';import 'package:flutter_waya/flutter_waya.dart';import 'package:flutter_waya/src/constant/styles.dart';typedef ValueCallback<int> = void Function(int titleIndex, int valueIndex);class DropdownMenu extends StatefulWidget {  ///头部数组  final List<String> title;  ///每个头部弹出菜单数组， 必须和title长度一样  final List<List<String>> value;  ///点击头部item回调  final ValueChanged<int> titleTap;  ///点击菜单的回调  final ValueCallback<int> valueTap;  final Color iconColor;  final Color itemBackground;  final Color background;  final Color titleBackground;  final TextStyle titleStyle;  final TextStyle valueStyle;  final double width;  final EdgeInsetsGeometry alertMargin;  final EdgeInsetsGeometry itemPadding;  final Decoration decoration;  final Decoration itemDecoration;  const DropdownMenu({    Key key,    Color itemBackground,    Color titleBackground,    @required this.title,    @required this.value,    this.titleTap,    this.valueTap,    this.titleStyle,    this.valueStyle,    this.width,    this.alertMargin,    this.iconColor,    this.itemPadding,    this.decoration,    this.itemDecoration,    this.background,  })  : this.itemBackground = itemBackground ?? Colors.white,        this.titleBackground = titleBackground ?? Colors.white,        super(key: key);  @override  State<StatefulWidget> createState() {    return DropdownMenuState();  }}class DropdownMenuState extends State<DropdownMenu> {  List<String> title = [];  List<List<String>> value = [];  List<bool> titleState = [];  GlobalKey titleKey = GlobalKey();  changeState(int index) {    setState(() {      titleState[index] = !titleState[index];    });  }  alertValueWidget(int index) {    RenderBox title = titleKey.currentContext.findRenderObject();    var local = title.localToGlobal(Offset.zero);    var titleHeight = context.size.height;    var top = local.dy + titleHeight;    var valueList = value[index];    var width = widget.width ?? ScreenFit.getWidth(0);    Widget alert = AlertBase(        animation: false,        top: top,        popupMode: PopupMode.top,        onTap: () {          changeState(index);          OverlayTools.close();        },        child: Universal(          width: width,          margin: widget.alertMargin,          height: ScreenFit.getHeight(0) - top,          color: widget.background ?? getColors(black70).withOpacity(0.2),          child: ListBuilder(            itemCount: valueList.length,            itemBuilder: (BuildContext ctx, int i) {              var v = valueList[i];              return SimpleButton(                text: v,                textStyle: widget.valueStyle ?? WayStyles.textStyleBlack70(),                width: width,                onTap: () {                  if (widget.valueTap != null)                    widget.valueTap(index, valueList.indexOf(v));                  changeState(index);                },                alignment: Alignment.center,                decoration: widget.itemDecoration ??                    BoxDecoration(                        color: widget.itemBackground,                        border: Border(                            bottom: BorderSide(color: getColors(background)))),                padding: widget.itemPadding,                height: titleHeight,              );            },          ),        ));    OverlayTools.show(alert);  }  @override  Widget build(BuildContext context) {    title = widget.title;    value = widget.value;    if (title.length == 0) return Container();    if (title.length != value.length) return Container();    return Universal(      key: titleKey,      width: widget.width,      padding: EdgeInsets.symmetric(vertical: ScreenFit.getWidth(8)),      mainAxisAlignment: MainAxisAlignment.spaceAround,      direction: Axis.horizontal,      color: widget.titleBackground ?? getColors(white),      decoration: widget.decoration,      children: title.map((text) {        titleState.add(false);        int index = title.indexOf(text);        return IconBox(          onTap: () {            if (widget.titleTap != null) widget.titleTap(index);            changeState(index);            alertValueWidget(index);          },          titleStyle: widget.titleStyle,          titleText: text,          reversal: true,          color: widget.iconColor ?? getColors(black70),          size: 20,          icon: titleState[index]              ? Icons.keyboard_arrow_up              : Icons.keyboard_arrow_down,        );      }).toList(),    );  }}