import 'package:flutter/material.dart';import 'package:flutter_waya/flutter_waya.dart';import 'package:flutter_waya/src/constant/colors.dart';class PickerTools {  ///日期选择器  static void dateTimePicker({    ///主要用于关闭 软键盘    BuildContext context,    ///背景色    Color backgroundColor,    ///头部    Widget titleBottom,    Widget title,    ///头部右侧 确定    Widget sure,    ///头部左侧 取消    Widget cancel,    ///内容文字样式    TextStyle contentStyle,    ///选择框内单位文字样式    TextStyle unitStyle,    ///取消点击事件    GestureTapCallback cancelTap,    ///确认点击事件    ValueChanged<String> sureTap,    ///单个item的高度    double itemHeight,    ///单个item的宽度    double itemWidth,    ///整个弹框高度    double height,    ///开始时间    DateTime startDate,    ///默认选中时间    DateTime defaultDate,    ///结束时间    DateTime endDate,    ///补全双位数    bool dual,    ///是否显示单位    bool showUnit,    ///背景高斯模糊    bool gaussian: true,    ///单位设置    DateTimePickerUnit unit,    /// 半径大小,越大则越平面,越小则间距越大    double diameterRatio,    /// 选中item偏移    double offAxisFraction,    ///表示车轮水平偏离中心的程度  范围[0,0.01]    double perspective,    ///放大倍率    double magnification,    ///是否启用放大镜    bool useMagnifier,    ///1或者2    double squeeze,    ScrollPhysics physics,    bool tapBackClose: false,  }) {    if (context != null) Tools.closeKeyboard(context);    Widget widget = AlertBase(        gaussian: gaussian,        color: getColors(black50),        alignment: Alignment.bottomCenter,        onTap: !tapBackClose ? null : close,        child: DateTimePicker(            diameterRatio: diameterRatio,            offAxisFraction: offAxisFraction,            perspective: perspective,            magnification: magnification,            useMagnifier: useMagnifier,            squeeze: squeeze,            itemHeight: itemHeight,            itemWidth: itemWidth,            height: height,            startDate: startDate,            endDate: endDate,            defaultDate: defaultDate,            dual: dual,            showUnit: showUnit,            unit: unit,            backgroundColor: backgroundColor,            sure: sure,            title: title,            cancel: cancel,            titleBottom: titleBottom,            contentStyle: contentStyle,            unitStyle: unitStyle,            cancelTap: cancelTap ?? close,            sureTap: sureTap ?? close));    OverlayTools.show(widget);  }  ///地区选择器  static void areaPicker({    ///主要用于关闭 软键盘    BuildContext context,    ///背景色    Color backgroundColor,    ///头部    Widget titleBottom,    Widget title,    ///头部右侧 确定    Widget sure,    ///头部左侧 取消    Widget cancel,    ///内容文字样式    TextStyle contentStyle,    ///取消点击事件    GestureTapCallback cancelTap,    ///确认点击事件    ValueChanged<String> sureTap,    ///单个item的高度    double itemHeight,    ///单个item的宽度    double itemWidth,    ///整个弹框高度    double height,    ///背景高斯模糊    bool gaussian: true,    /// 半径大小,越大则越平面,越小则间距越大    double diameterRatio,    /// 选中item偏移    double offAxisFraction,    ///表示车轮水平偏离中心的程度  范围[0,0.01]    double perspective,    ///放大倍率    double magnification,    ///是否启用放大镜    bool useMagnifier,    ///1或者2    double squeeze,    ScrollPhysics physics,    bool tapBackClose: false,  }) {    if (context != null) Tools.closeKeyboard(context);    Widget widget = AlertBase(        gaussian: gaussian,        color: getColors(black50),        alignment: Alignment.bottomCenter,        onTap: !tapBackClose ? null : close,        child: AreaPicker(            diameterRatio: diameterRatio,            offAxisFraction: offAxisFraction,            perspective: perspective,            magnification: magnification,            useMagnifier: useMagnifier,            squeeze: squeeze,            itemHeight: itemHeight,            itemWidth: itemWidth,            height: height,            backgroundColor: backgroundColor,            sure: sure,            title: title,            cancel: cancel,            titleBottom: titleBottom,            contentStyle: contentStyle,            cancelTap: cancelTap ?? close,            sureTap: sureTap ?? close));    OverlayTools.show(widget);  }  ///wheel 单列 取消确认 选择  static void multipleChoicePicker({    BuildContext context,    ///默认选中    int initialIndex,    ///背景色    Color color,    ///确认按钮    Widget sure,    ///取消按钮    Widget cancel,    ///头部文字    Widget title,    ///取消点击事件    GestureTapCallback cancelTap,    ///确认点击事件    ValueChanged<int> sureTap,    ///单个item的高度    double itemHeight,    ///单个item的宽度    double itemWidth,    ///整个弹框高度    double height,    /// 半径大小,越大则越平面,越小则间距越大    double diameterRatio,    /// 选中item偏移    double offAxisFraction,    ///表示车轮水平偏离中心的程度  范围[0,0.01]    double perspective,    ///放大倍率    double magnification,    ///是否启用放大镜    bool useMagnifier,    ///是否启动高斯模糊    bool gaussian,    ///1或者2    double squeeze,    ScrollPhysics physics,    @required int itemCount,    @required IndexedWidgetBuilder itemBuilder,  }) {    if (context != null) Tools.closeKeyboard(context);    Widget widget = AlertBase(        gaussian: gaussian,        color: getColors(black50),        alignment: Alignment.bottomCenter,        onTap: close,        child: MultipleChoicePicker(            itemCount: itemCount,            itemBuilder: itemBuilder,            diameterRatio: diameterRatio,            offAxisFraction: offAxisFraction,            perspective: perspective,            magnification: magnification,            useMagnifier: useMagnifier,            squeeze: squeeze,            itemHeight: itemHeight,            itemWidth: itemWidth,            height: height,            initialIndex: initialIndex,            sure: sure,            cancel: cancel,            title: title,            color: color,            cancelTap: cancelTap ?? close,            sureTap: sureTap ?? close));    OverlayTools.show(widget);  }  //关闭所有picker  static void close() {    OverlayTools.close();  }}